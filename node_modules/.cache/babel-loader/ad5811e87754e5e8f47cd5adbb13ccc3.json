{"ast":null,"code":"var _jsxFileName = \"/home/azen/Documents/blockstudio-main/App/src/Components/Login.js\";\nimport React from \"react\";\nimport Artist from \"./Artist\";\nimport Audience from \"./Audience\";\nimport { COLORS } from \"./Colors\";\nimport Logo from \"../Assets/logo.png\";\nimport contractMeta from \"../Build/blockstudio.json\";\nimport Web3 from 'web3';\nimport contract from 'truffle-contract';\nimport { create } from 'ipfs-http-client';\nimport Loader from \"react-loader-spinner\";\nimport SwitchSelector from \"react-switch-selector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loginUser = async () => {\n      let val = \"0\";\n      const contractInstance = await this.contract.deployed();\n      await contractInstance.checkUser({\n        from: this.state.account\n      }).then(x => {\n        val = x.toString();\n      });\n      this.setState({\n        type: val\n      });\n    };\n\n    this.registerUser = async () => {\n      const contractInstance = await this.contract.deployed();\n      if (this.state.choice === \"1\") await contractInstance.addNewArtist(this.state.username, {\n        from: this.state.account\n      }).then(() => this.loginUser());\n      if (this.state.choice === \"2\") await contractInstance.addNewAudience(this.state.username, {\n        from: this.state.account\n      }).then(() => this.loginUser());\n    };\n\n    this.web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n    this.contract = contract(contractMeta);\n    this.contract.setProvider(this.web3.currentProvider);\n    this.state = {\n      account: \"\",\n      ipfs: \"\",\n      username: \"\",\n      type: \"\",\n      choice: \"1\"\n    };\n  }\n\n  componentDidMount() {\n    this.loadBlockchain().then(() => console.log(\"Loaded Blockchain\"));\n    this.loadIPFS().then(() => console.log(\"Loaded IPFS\"));\n    this.loginUser().then(() => console.log(\"Login Successful\"));\n  }\n\n  async loadBlockchain() {\n    const accounts = await this.web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n  }\n\n  async loadIPFS() {\n    const conn = create({\n      host: 'ipfs.infura.io',\n      port: '5001',\n      protocol: 'https'\n    });\n    this.setState({\n      ipfs: conn\n    });\n  }\n\n  render() {\n    if (this.state.type === \"0\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.main,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          style: styles.img,\n          alt: \"logo\",\n          src: Logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.switch,\n          children: /*#__PURE__*/_jsxDEV(SwitchSelector, {\n            onChange: val => {\n              this.setState({\n                choice: val\n              });\n            },\n            options: [{\n              label: \"Artist ðŸŽ™\",\n              value: \"1\",\n              selectedBackgroundColor: \"#26ae5f\"\n            }, {\n              label: \"Audience ðŸŽ§\",\n              value: \"2\",\n              selectedBackgroundColor: \"#26ae5f\"\n            }],\n            wrapperBorderRadius: 50,\n            optionBorderRadius: 50,\n            fontSize: \"20\",\n            fontColor: COLORS.white,\n            backgroundColor: COLORS.black\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.username,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            style: styles.textInput,\n            value: this.state.username,\n            required: true,\n            onChange: x => {\n              this.setState({\n                username: x.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: styles.button,\n          onClick: this.registerUser,\n          children: \" Register \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    } else if (this.state.type === \"1\") {\n      return /*#__PURE__*/_jsxDEV(Artist, {\n        account: this.state.account,\n        contract: this.contract,\n        ipfs: this.state.ipfs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    } else if (this.state.type === \"2\") {\n      return /*#__PURE__*/_jsxDEV(Audience, {\n        account: this.state.account,\n        contract: this.contract,\n        ipfs: this.state.ipfs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.main,\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"Bars\",\n          color: COLORS.black\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nconst styles = {\n  main: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    background: COLORS.brown\n  },\n  button: {\n    height: \"7.5%\",\n    width: \"15%\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\",\n    cursor: \"pointer\",\n    borderRadius: \"50px\",\n    boxShadow: \"2px 5px 2px #999\",\n    color: COLORS.white,\n    background: COLORS.black\n  },\n  img: {\n    width: \"32.5%\",\n    borderRadius: \"100px\",\n    boxShadow: \"2px 5px 2px #999\"\n  },\n  switch: {\n    height: \"7.5%\",\n    width: \"25%\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"500\"\n  },\n  form: {\n    marginBottom: \"5%\",\n    marginTop: \"5%\",\n    padding: \"5%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    borderRadius: \"10px\",\n    border: \"2px solid\",\n    overflow: \"auto\",\n    gap: \"20px\",\n    borderColor: COLORS.black,\n    backgroundColor: COLORS.brown\n  },\n  username: {\n    height: \"6%\",\n    width: \"15%\",\n    fontSize: \"1.2rem\"\n  },\n  textInput: {\n    height: \"100%\",\n    borderRadius: \"15px\",\n    padding: \"3%\",\n    textAlign: \"center\"\n  }\n};\nexport default Login;","map":{"version":3,"sources":["/home/azen/Documents/blockstudio-main/App/src/Components/Login.js"],"names":["React","Artist","Audience","COLORS","Logo","contractMeta","Web3","contract","create","Loader","SwitchSelector","Login","Component","constructor","props","loginUser","val","contractInstance","deployed","checkUser","from","state","account","then","x","toString","setState","type","registerUser","choice","addNewArtist","username","addNewAudience","web3","givenProvider","setProvider","currentProvider","ipfs","componentDidMount","loadBlockchain","console","log","loadIPFS","accounts","eth","getAccounts","conn","host","port","protocol","render","styles","main","img","switch","label","value","selectedBackgroundColor","white","black","textInput","target","button","height","display","flexDirection","justifyContent","alignItems","background","brown","width","fontSize","fontWeight","cursor","borderRadius","boxShadow","color","form","marginBottom","marginTop","padding","border","overflow","gap","borderColor","backgroundColor","textAlign"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Artist from \"./Artist\"\nimport Audience from \"./Audience\"\nimport {COLORS} from \"./Colors\"\nimport Logo from \"../Assets/logo.png\"\nimport contractMeta from \"../Build/blockstudio.json\"\n\nimport Web3 from 'web3'\nimport contract from 'truffle-contract'\nimport {create} from 'ipfs-http-client'\nimport Loader from \"react-loader-spinner\"\nimport SwitchSelector from \"react-switch-selector\"\nclass Login extends React.Component {\n\n  constructor(props){\n    super(props)\n      this.web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\")\n      this.contract = contract(contractMeta)\n      this.contract.setProvider(this.web3.currentProvider)\n      this.state = { account : \"\", ipfs : \"\", username: \"\", type : \"\", choice : \"1\", }\n    }\n\n  componentDidMount(){\n    this.loadBlockchain().then(() => console.log(\"Loaded Blockchain\"))\n    this.loadIPFS().then(() => console.log(\"Loaded IPFS\"))\n    this.loginUser().then(() => console.log(\"Login Successful\"))\n  }\n\n  async loadBlockchain(){\n    const accounts = await this.web3.eth.getAccounts()\n    this.setState({account:accounts[0]})\n  }\n\n  async loadIPFS(){\n    const conn = create({ host: 'ipfs.infura.io', port: '5001', protocol: 'https' })\n    this.setState({ipfs:conn})\n  }\n\n  loginUser = async () => {\n      let val = \"0\"\n      const contractInstance = await this.contract.deployed()\n      await contractInstance.checkUser({from:this.state.account}).then((x)=>{ val = x.toString()})\n      this.setState({type: val})\n  }\n\n  registerUser = async () =>{\n    const contractInstance = await this.contract.deployed()\n    if (this.state.choice === \"1\")\n      await contractInstance.addNewArtist(this.state.username,{from:this.state.account}).then(() => this.loginUser())\n    if (this.state.choice === \"2\")\n      await contractInstance.addNewAudience(this.state.username,{from:this.state.account}).then(() => this.loginUser())\n  }\n\n  render(){\n\n    if (this.state.type === \"0\" ){\n      return (\n        <div style = {styles.main}>\n          <img style = {styles.img} alt=\"logo\" src = {Logo}/>\n          <div style = {styles.switch}> \n            <SwitchSelector\n              onChange = {(val) => {this.setState({choice: val})}} \n              options = {[\n                {label: \"Artist ðŸŽ™\", value: \"1\", selectedBackgroundColor: \"#26ae5f\",},\n                {label: \"Audience ðŸŽ§\", value: \"2\", selectedBackgroundColor: \"#26ae5f\"}\n              ]}\n              wrapperBorderRadius = {50} \n              optionBorderRadius = {50}\n              fontSize = {\"20\"} \n              fontColor={COLORS.white}\n              backgroundColor={COLORS.black} />\n          </div>\n          <div style={styles.username}>\n            <input  type=\"text\" placeholder =\"Username\"  style = {styles.textInput} \n                  value={this.state.username} required\n                  onChange={(x)=>{this.setState({username:x.target.value})}} />\n          </div>\n          <button style = {styles.button} onClick = {this.registerUser}> Register </button>\n        </div>\n      );\n    }\n\n    else if (this.state.type === \"1\"){\n      return (\n        <Artist \n          account = {this.state.account}\n          contract = {this.contract}\n          ipfs = {this.state.ipfs}\n        />\n      )\n    }\n\n    else if (this.state.type === \"2\"){\n      return (\n        <Audience\n          account = {this.state.account}\n          contract = {this.contract}\n          ipfs = {this.state.ipfs}\n        />\n      )\n    }\n\n    else {\n      return (\n        <div style = {styles.main}>\n          <Loader type = \"Bars\" color = {COLORS.black}/>\n        </div>\n      )\n    }\n  }\n}\n\nconst styles = {\n  main : {\n    height:\"100vh\",\n    display:\"flex\", \n    flexDirection:\"column\", \n    justifyContent: \"space-around\", \n    alignItems: \"center\", \n    background:COLORS.brown\n  },\n  button : { \n    height: \"7.5%\",\n    width : \"15%\", \n    fontSize: \"1.2rem\", \n    fontWeight: \"500\",  \n    cursor:\"pointer\", \n    borderRadius:\"50px\",\n    boxShadow: \"2px 5px 2px #999\",\n    color: COLORS.white,\n    background:COLORS.black,\n  },\n  img : {\n    width:\"32.5%\",\n    borderRadius:\"100px\", \n    boxShadow: \"2px 5px 2px #999\",\n  },\n  switch: {\n    height: \"7.5%\",\n    width: \"25%\",  \n    fontSize: \"1.2rem\", \n    fontWeight: \"500\", \n  },\n  form:{\n    marginBottom :\"5%\",\n    marginTop :\"5%\",\n    padding :\"5%\",\n    display:\"flex\", \n    flexDirection:\"column\",\n    alignItems: \"center\", \n    borderRadius:\"10px\",\n    border: \"2px solid\",\n    overflow: \"auto\",\n    gap : \"20px\",\n    borderColor :COLORS.black,\n    backgroundColor:COLORS.brown,\n  },\n  username:{\n    height: \"6%\",\n    width : \"15%\", \n    fontSize: \"1.2rem\",  \n  },\n  textInput : {\n    height: \"100%\",\n    borderRadius:\"15px\",\n    padding: \"3%\",\n    textAlign: \"center\",\n   },\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}